{"ast":null,"code":"var _jsxFileName = \"/Users/richardhaynes/Developer/Projects/C#/CSharpPracticalDataStructuresAndAlgorithms/src/DataStructures/Queues/PriorityQueue/EmergencyDispatch/EmergencyDispatch/ClientApp/src/components/api-authorization/AuthorizeRoute.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants';\nimport authService from './AuthorizeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AuthorizeRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.authenticationChanged());\n    this.populateAuthenticationState();\n  }\n\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n\n  render() {\n    const {\n      ready,\n      authenticated\n    } = this.state;\n    var link = document.createElement(\"a\");\n    link.href = this.props.path;\n    const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\n    const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURIComponent(returnUrl)}`;\n\n    if (!ready) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    } else {\n      const {\n        element\n      } = this.props;\n      return authenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: redirectUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 40\n      }, this);\n    }\n  }\n\n  async populateAuthenticationState() {\n    const authenticated = await authService.isAuthenticated();\n    this.setState({\n      ready: true,\n      authenticated\n    });\n  }\n\n  async authenticationChanged() {\n    this.setState({\n      ready: false,\n      authenticated: false\n    });\n    await this.populateAuthenticationState();\n  }\n\n}","map":{"version":3,"names":["React","Component","Navigate","ApplicationPaths","QueryParameterNames","authService","AuthorizeRoute","constructor","props","state","ready","authenticated","componentDidMount","_subscription","subscribe","authenticationChanged","populateAuthenticationState","componentWillUnmount","unsubscribe","render","link","document","createElement","href","path","returnUrl","protocol","host","pathname","search","hash","redirectUrl","Login","ReturnUrl","encodeURIComponent","element","isAuthenticated","setState"],"sources":["/Users/richardhaynes/Developer/Projects/C#/CSharpPracticalDataStructuresAndAlgorithms/src/DataStructures/Queues/PriorityQueue/EmergencyDispatch/EmergencyDispatch/ClientApp/src/components/api-authorization/AuthorizeRoute.js"],"sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ready: false,\r\n      authenticated: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n    this.populateAuthenticationState();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    authService.unsubscribe(this._subscription);\r\n  }\r\n\r\n  render() {\r\n    const { ready, authenticated } = this.state;\r\n    var link = document.createElement(\"a\");\r\n    link.href = this.props.path;\r\n    const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n    const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURIComponent(returnUrl)}`;\r\n    if (!ready) {\r\n      return <div></div>;\r\n    } else {\r\n      const { element } = this.props;\r\n      return authenticated ? element : <Navigate replace to={redirectUrl} />;\r\n    }\r\n  }\r\n\r\n  async populateAuthenticationState() {\r\n    const authenticated = await authService.isAuthenticated();\r\n    this.setState({ ready: true, authenticated });\r\n  }\r\n\r\n  async authenticationChanged() {\r\n    this.setState({ ready: false, authenticated: false });\r\n    await this.populateAuthenticationState();\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,6BAAtD;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,eAAe,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;EACpDM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,KADI;MAEXC,aAAa,EAAE;IAFJ,CAAb;EAID;;EAEDC,iBAAiB,GAAG;IAClB,KAAKC,aAAL,GAAqBR,WAAW,CAACS,SAAZ,CAAsB,MAAM,KAAKC,qBAAL,EAA5B,CAArB;IACA,KAAKC,2BAAL;EACD;;EAEDC,oBAAoB,GAAG;IACrBZ,WAAW,CAACa,WAAZ,CAAwB,KAAKL,aAA7B;EACD;;EAEDM,MAAM,GAAG;IACP,MAAM;MAAET,KAAF;MAASC;IAAT,IAA2B,KAAKF,KAAtC;IACA,IAAIW,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;IACAF,IAAI,CAACG,IAAL,GAAY,KAAKf,KAAL,CAAWgB,IAAvB;IACA,MAAMC,SAAS,GAAI,GAAEL,IAAI,CAACM,QAAS,KAAIN,IAAI,CAACO,IAAK,GAAEP,IAAI,CAACQ,QAAS,GAAER,IAAI,CAACS,MAAO,GAAET,IAAI,CAACU,IAAK,EAA3F;IACA,MAAMC,WAAW,GAAI,GAAE5B,gBAAgB,CAAC6B,KAAM,IAAG5B,mBAAmB,CAAC6B,SAAU,IAAGC,kBAAkB,CAACT,SAAD,CAAY,EAAhH;;IACA,IAAI,CAACf,KAAL,EAAY;MACV,oBAAO;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO;MACL,MAAM;QAAEyB;MAAF,IAAc,KAAK3B,KAAzB;MACA,OAAOG,aAAa,GAAGwB,OAAH,gBAAa,QAAC,QAAD;QAAU,OAAO,MAAjB;QAAkB,EAAE,EAAEJ;MAAtB;QAAA;QAAA;QAAA;MAAA,QAAjC;IACD;EACF;;EAEgC,MAA3Bf,2BAA2B,GAAG;IAClC,MAAML,aAAa,GAAG,MAAMN,WAAW,CAAC+B,eAAZ,EAA5B;IACA,KAAKC,QAAL,CAAc;MAAE3B,KAAK,EAAE,IAAT;MAAeC;IAAf,CAAd;EACD;;EAE0B,MAArBI,qBAAqB,GAAG;IAC5B,KAAKsB,QAAL,CAAc;MAAE3B,KAAK,EAAE,KAAT;MAAgBC,aAAa,EAAE;IAA/B,CAAd;IACA,MAAM,KAAKK,2BAAL,EAAN;EACD;;AAzCmD"},"metadata":{},"sourceType":"module"}